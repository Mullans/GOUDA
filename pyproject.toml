[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "GOUDA"
dynamic = ["version"]
authors = [
    {name = "Sean Mullan"}
]
description = "Good Old Utilities for Data Analysis!"
readme = "README.md"
license = {text = "MIT"}
keywords = ["utilities"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21",
    "opencv-python",
    "scipy",
    "matplotlib",
    "colorama",
    "types-colorama",  # for mypy
    "scipy-stubs; python_version >= '3.10'", # for mypy
    "typing-extensions; python_version < '3.10'",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pre-commit",
    "mypy"
]

[project.urls]
Homepage = "https://github.com/mullans/GOUDA"
Repository = "https://github.com/mullans/GOUDA"

# [tool.setuptools]
# packages = ["src"]
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
# write_to = "src/gouda/_version.py"
# https://setuptools-scm.readthedocs.io/en/latest/extending/#available-implementations
version_scheme = "only-version"
local_scheme = "no-local-version"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov gouda --cov-report term-missing --cov-report html --cov-report xml:cov.xml --verbose"
testpaths = [
    "tests",
]
norecursedirs = [
    "dist",
    "build",
    "docs",
    ".tox",
]

[tool.ruff]
exclude = [
    "dist",
    "build",
    ".tox",
    ".venv",
    "docs",
    "gouda/_version.py",
]
line-length = 120
indent-width = 4
target-version = "py310"
extend-exclude = ["ignore_*"]


[tool.ruff.lint]
select = [
    "E4", "E7", "E9", "F", "B",
    "W", #"I",
    "ANN", "A", "C4", "FA", "PIE", "PT", "Q", "SIM", "I", "NPY", "N", "PERF", "D", "UP",
    "PLC", "PLE", "FURB", "RUF",
    # "RET"  # Tried and removed
    ]
ignore = [
    "E501", "B028", # Unnecessary
    "D203", # Contradicts other rules
    "SIM105", "N802", "UP015", # Counter-productive
    "B905", "UP007", "UP038"  # Remove when 3.9 no longer supported
]
fixable = ["ALL"]
unfixable = []
exclude = [
    "binaryconfusionmatrix.py",
    "tests/*"
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = ["gouda"]
extra-standard-library = ["setuptools", "pkg_resources"]
default-section = "third-party"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"symbols.py" = ["N816"]  # Fix at some point - low priority

[tool.mypy]  # https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
exclude = [
    "tests/.*",
    "docs/.*",
    "dist/.*",
    "build/.*",
    "_version.py",
    ".*plotting.py$",
]

plugins = [
    "numpy.typing.mypy_plugin",

]
